# PyQ模擬試験
# 20. 次のコードを実⾏して{2} {2, 3, 5, 7, 9, 11}が 表⽰されるとき、空欄①、②に⼊る記述の組み合わせとして正しいものを選択してください（1つ選択）

odds = {3, 5, 7, 9, 11}
primes = {2, 3, 5, 7, 11}

# 和集合：s | t（sとtのどちらかに含まれる要素の集合）
print("和集合：", odds | primes)
# 出力：{2, 3, 5, 7, 9, 11}

# 積集合：s & t（sとtに共通する要素の集合）
print("積集合：", odds & primes)
# 出力：{11, 3, 5, 7}

# 差集合：s - t（sに含まれてtに含まれない要素の集合）
print("差集合o-p：", odds - primes)
# 出力：{9}
print("差集合p-o：", primes - odds)
# 出力：{2}

# 対象差：s ^ t（sとtの片方だけに含まれる要素の集合）
# 天才的な覚え方「^-^」：ベン図の重複部分「-」は除外して、左右の非重複部「^^」が該当する
print("対象差：", odds ^ primes)
# 出力：{2, 9}

### ^-^ 対象差をふかぼり ^-^

# 3つの集合の対象差
s1 = {1, 2, 3}
s2 = {2, 3, 4}
s3 = {3, 4, 5}

print("s1 ^ s2:", s1 ^ s2)
# 出力：{1, 4}
print("s1 ^ s2 ^ s3:", s1 ^ s2 ^ s3)
# 出力：{1, 3, 5}
# {1, 4} ^ {3, 4, 5} だから {1, 3, 5} になる

# symmetric_difference()メソッドでも同じ処理ができる
print("s1.symmetric_difference(s2):", s1.symmetric_difference(s2))
# 出力：{1, 4}

# 同値の集合の対象差
s4 = {1, 2, 3}
print("同値の対象差：", s1 ^ s4)
# 出力：set()
