# 問題集4章：判定と繰り返し：短絡演算子 and or
# ----- 問題2. -----
def num(value):
    return value

value1 = num(0) and num(1) and num(2)
value2 = num(0) or num(1) or num(2)
print(value1, value2) # 出力：0 1

# ----- 以下、この問題を理解するためのテストコード -----
# 短絡演算子とは？：不要な評価を省略して短絡する演算子

# A and B の場合
# ・Aを評価して真偽を判定する
# ・判定が偽ならBを評価せず、そのままAを返す
# ・判定が真ならBを評価して、その結果（真または偽であるB）を返す

# 左の 0 を評価し、これは偽なので右の 1 を評価せず、0 をそのまま返す
print(f"0 and 1 = {0 and 1}")

# 左の 1 を評価し、これは真なので右の 0 を評価し、その結果である 0 を返す
print(f"1 and 0 = {1 and 0}")

# 左の 1 を評価し、これは真なので右の 1 を評価し、その結果である 1 を返す
print(f"1 and 1 = {1 and 1}")

# 左の 2 を評価し、これは真なので右の 3 を評価し、その結果が真なので 3 をそのまま返す
print(f"2 and 3 = {2 and 3}")

# 真偽で偽と判定される代表例
# 0, [], None →　Noneの挙動は別途 wb_c04_none.py を参照

l1 = []
l2 = [1, 2]
l3 = [3, 4]

# 左の [] を評価し、これは偽なので右の [1, 2] を評価せず、[] をそのまま返す
print(f"li and l2 = {l1 and l2}")

# 左の [1, 2] を評価し、これは真なので右の [3, 4] を評価し、その結果が真なので [3, 4] をそのまま返す
print(f"l2 and l3 = {l2 and l3}")

# A or B の場合
# Aが真ならその結果(A)を返し、そうでなければBの結果(B)を返す

print(f"0 or 2 = {0 or 2}")
print(f"3 or 0 = {3 or 0}")
print(f"4 or 5 = {4 or 5}")

# and がずっと続く場合
# 左から評価していき、「最初に偽」になった評価結果が最終結果になり、そこで評価をやめる
# すべて真の場合は、最後の評価結果が最終結果になる

# 左から評価していき、最初に偽になる 0 が最終結果になり、そこで評価をやめる
print(f"1 and 2 and 0 and 3 = {1 and 2 and 0 and 3}")

# 左から評価していき、すべて真なので最後の 4 が結果になる
print(f"1 and 2 and 3 and 4 = {1 and 2 and 3 and 4}")

# or がずっと続く場合
# 左から評価していき、「最初に真」になった評価結果が最終結果になり、そこで評価をやめる
# すべて偽の場合は、最後の評価結果が最終結果になる

print(f"0 or 1 or 2 or 3 = {0 or 1 or 2 or 3}")
print(f"0 or 0 or 0 or 0 = {0 or 0 or 0 or 0}")
