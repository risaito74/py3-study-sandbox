# 5章データ構造：シーケンスの比較、その他の型の比較
# シーケンスオブジェクトは同じシーケンス型の他のオブジェクトと比較されることがあり、この比較には辞書的順序を使用する。

li1 = [1, 2, 3]
li2 = [1, 2, 4]
print(f"{li1} < {li2} : {li1 < li2}")

tp1 = (1, 2, 3)
tp2 = (1, 2, 4)
print(f"{tp1} < {tp2} : {tp1 < tp2}")

str1 = "abc"
str2 = "abd"
str3 = "c"
print(f"'{str1}' < '{str2}' : {str1 < str2}")
print(f"'{str1}' < '{str3}' : {str1 < str3}")

# 要素数が違うケース
tp3 = (1, 2, 3, 4)
tp4 = (1, 2, 4)
tp5 = (1,) # 要素1のタプルとしてカンマをつける（つけないとint扱いになる）
print(f"{tp3} < {tp4} : {tp3 < tp4}")
print(f"{tp3} > {tp5} : {tp3 > tp5}")

tp6 = (1, 2)
tp7 = (1, 2, -1)
print(f"{tp6} < {tp7} : {tp6 < tp7}")

# 要素の型が違うケース
li_f = [1.0, 2.0, 3.0]
print(f"{li1} == {li_f} : {li1 == li_f}")

li_f2 = [1.0, 2.0, 4.0]
print(f"{li1} < {li_f2} : {li1 < li_f2}")

# リストとタプルの比較
#print(f"{li1} < {tp2} : {li1 < tp2}") # リストとタプルの大小比較でエラーになる
print(f"{li1} == {tp1} : {li1 == tp1}") # リストとタプルは型が異なるので（要素が同じでも） False が返る

# リストと集合の比較
se1 = {1, 2, 3}
#print(f"{li1} > {se1} : {li1 > se1}") # リストと集合の大小比較でエラーになる
print(f"{li1} == {se1} : {li1 == se1}") # リストと集合は型が異なるので（要素が同じでも） False が返る

